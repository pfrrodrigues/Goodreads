CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TABLE Leitor (
    email VARCHAR(100) PRIMARY KEY,
    nome VARCHAR(50),
    senha VARCHAR(256),
    sexo CHAR(1),
    nascimento DATE,
    Leitor_TIPO INT,
    fk_Pais_codPais UUID
);

CREATE TABLE Livro (
    ISBN CHAR(10) PRIMARY KEY,
    titulo VARCHAR(100),
    descr TEXT,
    nmrPag INTEGER,
    fk_formato_formato_PK UUID,
    anoPublic DATE,
    imagem VARCHAR(100)
);

CREATE TABLE Evento (
    codEvento UUID DEFAULT uuid_generate_v4 (),
    hora TIME,
    data DATE,
    descricao TEXT,
    Evento_TIPO INT,
    fk_Leitor_email VARCHAR(100),
    fk_Leitor_email_ VARCHAR(100),
    fk_Endereco_codEnd UUID,
    PRIMARY KEY (codEvento)
);

CREATE TABLE Grupo (
    codGrupo UUID DEFAULT uuid_generate_v4 (),
    nome VARCHAR(100),
    fk_Leitor_email VARCHAR(100),
    PRIMARY KEY (codGrupo)
);

CREATE TABLE Pais (
    codPais UUID DEFAULT uuid_generate_v4 (),
    nome VARCHAR(100),
    PRIMARY KEY (codPais)
);

CREATE TABLE Genero (
    codGenero UUID DEFAULT uuid_generate_v4 (),
    nome VARCHAR(100),
    PRIMARY KEY(codGenero)
);

CREATE TABLE Tag_Grupo (
    codTagg UUID DEFAULT uuid_generate_v4 (),
    tagg VARCHAR(100),
    PRIMARY KEY(codTagg)
);

CREATE TABLE Lista (
    codLista UUID DEFAULT uuid_generate_v4 (),
    nome VARCHAR(100),
    fk_Leitor_email VARCHAR(100),
    PRIMARY KEY(codLista)
);

CREATE TABLE Tag_Lista (
    codTagl UUID DEFAULT uuid_generate_v4 (),
    tagl VARCHAR(100),
    PRIMARY KEY(codTagl)
);

CREATE TABLE Mensagem_PARTICIPA (
    fk_Leitor_email VARCHAR(100),
    fk_Grupo_codGrupo UUID
);

CREATE TABLE Post (
    codPost UUID DEFAULT uuid_generate_v4 (),
    PRIMARY KEY (codPost)
);

CREATE TABLE Endereco (
    cidade VARCHAR(100),
    rua VARCHAR(100),
    bairro VARCHAR(100),
    nmrEstabelecimento INTEGER,
    codEnd UUID DEFAULT uuid_generate_v4 (),
    fk_Pais_codPais UUID,
    PRIMARY KEY (codEnd)
);

CREATE TABLE formato (
    formato_PK UUID DEFAULT uuid_generate_v4 (),
    formato VARCHAR(20),
    PRIMARY KEY(formato_PK)
);

CREATE TABLE AMIZADE (
    FK_Leitor_email VARCHAR(100),
    FK_Leitor_email_ VARCHAR(100)
);

CREATE TABLE LEITURA (
    FK_Leitor_email VARCHAR(100),
    FK_Livro_ISBN CHAR(10),
    tipo CHAR(1),
    classificacao CHAR(1)
);

CREATE TABLE ESCRITA (
    FK_Leitor_email VARCHAR(100),
    FK_Livro_ISBN CHAR(10)
);

CREATE TABLE PARTICIPACAO (
    FK_Leitor_email VARCHAR(100),
    FK_Evento_codEvento UUID
);

CREATE TABLE POSSE_GENERO (
    FK_Livro_ISBN CHAR(10),
    FK_Genero_codGenero UUID
);

CREATE TABLE CONTEM (
    FK_Lista_codLista UUID,
    FK_Livro_ISBN CHAR(10)
);

CREATE TABLE POSSE_TAGG (
    FK_Grupo_codGrupo UUID,
    FK_Tag_Grupo_codTagg UUID
);

CREATE TABLE POSSE_TAGL (
    FK_Lista_codLista UUID,
    FK_Tag_Lista_codTagl UUID
);

CREATE TABLE POSTAGEM (
    FK_Post_codPost UUID
);

ALTER TABLE Leitor ADD CONSTRAINT FK_Leitor_2
FOREIGN KEY (fk_Pais_codPais)
REFERENCES Pais (codPais)
ON DELETE CASCADE;

ALTER TABLE Livro ADD CONSTRAINT FK_Livro_2
FOREIGN KEY (fk_formato_formato_PK)
REFERENCES formato (formato_PK)
ON DELETE CASCADE;

ALTER TABLE Evento ADD CONSTRAINT FK_Evento_3
FOREIGN KEY (fk_Endereco_codEnd)
REFERENCES Endereco (codEnd)
ON DELETE RESTRICT;

ALTER TABLE Grupo ADD CONSTRAINT FK_Grupo_2
FOREIGN KEY (fk_Leitor_email)
REFERENCES Leitor (email)
ON DELETE CASCADE;

ALTER TABLE Lista ADD CONSTRAINT FK_Lista_2
FOREIGN KEY (fk_Leitor_email)
REFERENCES Leitor (email)
ON DELETE CASCADE;

ALTER TABLE Mensagem_PARTICIPA ADD CONSTRAINT FK_Mensagem_PARTICIPA_1
FOREIGN KEY (fk_Leitor_email)
REFERENCES Leitor (email);

ALTER TABLE Mensagem_PARTICIPA ADD CONSTRAINT FK_Mensagem_PARTICIPA_2
FOREIGN KEY (fk_Grupo_codGrupo)
REFERENCES Grupo (codGrupo);

ALTER TABLE Endereco ADD CONSTRAINT FK_Endereco_2
FOREIGN KEY (fk_Pais_codPais)
REFERENCES Pais (codPais)
ON DELETE CASCADE;

ALTER TABLE AMIZADE ADD CONSTRAINT FK_AMIZADE_1
FOREIGN KEY (FK_Leitor_email)
REFERENCES Leitor (email)
ON DELETE CASCADE;

ALTER TABLE AMIZADE ADD CONSTRAINT FK_AMIZADE_2
FOREIGN KEY (FK_Leitor_email_)
REFERENCES Leitor (email)
ON DELETE CASCADE;

ALTER TABLE LEITURA ADD CONSTRAINT FK_LEITURA_1
FOREIGN KEY (FK_Leitor_email)
REFERENCES Leitor (email)
ON DELETE SET NULL;

ALTER TABLE LEITURA ADD CONSTRAINT FK_LEITURA_2
FOREIGN KEY (FK_Livro_ISBN)
REFERENCES Livro (ISBN)
ON DELETE SET NULL;

ALTER TABLE ESCRITA ADD CONSTRAINT FK_ESCRITA_1
FOREIGN KEY (FK_Leitor_email)
REFERENCES Leitor (email)
ON DELETE RESTRICT;

ALTER TABLE ESCRITA ADD CONSTRAINT FK_ESCRITA_2
FOREIGN KEY (FK_Livro_ISBN)
REFERENCES Livro (ISBN)
ON DELETE RESTRICT;

ALTER TABLE PARTICIPACAO ADD CONSTRAINT FK_PARTICIPACAO_1
FOREIGN KEY (FK_Leitor_email)
REFERENCES Leitor (email)
ON DELETE RESTRICT;

ALTER TABLE PARTICIPACAO ADD CONSTRAINT FK_PARTICIPACAO_2
FOREIGN KEY (FK_Evento_codEvento)
REFERENCES Evento (codEvento)
ON DELETE SET NULL;

ALTER TABLE POSSE_GENERO ADD CONSTRAINT FK_POSSE_GENERO_1
FOREIGN KEY (FK_Livro_ISBN)
REFERENCES Livro (ISBN)
ON DELETE RESTRICT;

ALTER TABLE POSSE_GENERO ADD CONSTRAINT FK_POSSE_GENERO_2
FOREIGN KEY (FK_Genero_codGenero)
REFERENCES Genero (codGenero)
ON DELETE SET NULL;

ALTER TABLE CONTEM ADD CONSTRAINT FK_CONTEM_1
FOREIGN KEY (FK_Lista_codLista)
REFERENCES Lista (codLista)
ON DELETE SET NULL;

ALTER TABLE CONTEM ADD CONSTRAINT FK_CONTEM_2
FOREIGN KEY (FK_Livro_ISBN)
REFERENCES Livro (ISBN)
ON DELETE SET NULL;

ALTER TABLE POSSE_TAGG ADD CONSTRAINT FK_POSSE_TAGG_1
FOREIGN KEY (FK_Grupo_codGrupo)
REFERENCES Grupo (codGrupo)
ON DELETE RESTRICT;

ALTER TABLE POSSE_TAGG ADD CONSTRAINT FK_POSSE_TAGG_2
FOREIGN KEY (FK_Tag_Grupo_codTagg)
REFERENCES Tag_Grupo (codTagg)
ON DELETE SET NULL;

ALTER TABLE POSSE_TAGL ADD CONSTRAINT FK_POSSE_TAGL_1
FOREIGN KEY (FK_Lista_codLista)
REFERENCES Lista (codLista)
ON DELETE RESTRICT;

ALTER TABLE POSSE_TAGL ADD CONSTRAINT FK_POSSE_TAGL_2
FOREIGN KEY (FK_Tag_Lista_codTagl)
REFERENCES Tag_Lista (codTagl)
ON DELETE SET NULL;

ALTER TABLE POSTAGEM ADD CONSTRAINT FK_POSTAGEM_1
FOREIGN KEY (FK_Post_codPost)
REFERENCES Post (codPost)
ON DELETE SET NULL;
